<div class="w-full h-screen bg-gray-100 pt-8">

   

    <div class="bg-white p-3 max-w-md mx-auto">

        <div class="text-center">
            <h1 class="text-3xl font-bold">ToDo App</h1>
            <a href="/admin">
            <button
            class="ml-2 border-2 border-green-500 p-2 text-green-500 hover:text-white hover:bg-green-500 rounded-lg flex">
            <svg class="h-6 w-6" width="24" height="24" viewBox="0 0 24 24" stroke-width="2"
                stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" />
            <span >Admin View</span>
        </button>
         </a>
        
            <div class="mt-4 flex">
                <input id="new-task" class="w-80 border-b-2 border-gray-500 text-black" type="text"
                    placeholder="Enter your task here" />
                <button
                    onclick="add()"
                    class="ml-2 border-2 border-green-500 p-2 text-green-500 hover:text-white hover:bg-green-500 rounded-lg flex">
                    <svg class="h-6 w-6" width="24" height="24" viewBox="0 0 24 24" stroke-width="2"
                        stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" />
                        <circle cx="12" cy="12" r="9" />
                        <line x1="9" y1="12" x2="15" y2="12" />
                        <line x1="12" y1="9" x2="12" y2="15" /></svg>
                    <span >Add</span>
                </button>
            </div>
        </div>

        <div class="mt-8">
            <ul>


                <% tasks.forEach((task,index) => { %>
                <li class="p-2 rounded-lg">
                    <div class="flex align-middle flex-row justify-between">
                        <div class="p-2">
                            <input type="checkbox" onclick="check(<%= (index+1) %>)" class="h-6 w-6" value="true" />
                        </div>
                        <div class="p-2">
                            <p  onblur="SuccessDone('<%="task-data" + (index+1) %>','<%= task._id %>')"  id="<%= "task-data" +  (index+1) %>" class="text-lg "><%= task.task %></p>
                        </div>
                        <button onclick="deleteNow('<%= task._id %>')"   class="flex text-red-500 border-2 border-red-500 p-1 rounded-lg">
                            <svg class="h-6 w-6 text-red-500" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10" />
                                <line x1="15" y1="9" x2="9" y2="15" />
                                <line x1="9" y1="9" x2="15" y2="15" />
                            </svg>
                            <span >  Remove </span>
                        </button>
                        <button onclick="editNow('<%="task-data" + (index+1) %>')" class="flex text-blue-500 border-2 border-blue-500 p-1 rounded-lg">
                            <span>Edit</span>
                        </button>
                    </div>
                    <hr class="mt-2" />
                </li>

                <% }); %>



            </ul>
        </div>

    </div>


    






</div>


<script>
   
   function editNow(x){
    const data = document.querySelector(`#${x}`);
    data.setAttribute("contenteditable","true")

    data.style.border="2px solid blue"

   }




  async function SuccessDone(x,id){
alert(id);

    var data = document.querySelector(`#${x}`);
    var FormData = data.innerText
    data.style.border="none"
    
    const val = await fetch("/update/todo", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                data:{
                    text:FormData,
                    id:id
                }
            })
        })

         
   }



    function check(x) {
        const checkbox = document.querySelector('input[type="checkbox"]');
        const data = document.querySelector(`#task-data${x}`);

        const Done = checkbox.checked
        if (Done) {
          
            data.classList.add("line-through");
        } else {
           
            data.classList.remove("line-through");
        }

        const val = fetch("/user/todo", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                taskStatus:Status
            })
        })

    }


     function add() {
        const data = document.querySelector(`#new-task`).value;
        if(data==""){
            alert("please fill data")
            return
        }

        const val = fetch("/user/todo", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                task: data
            })
        })

        location.reload()   
    }


    function deleteNow(task){
        const val = fetch("/user/delete", {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                id:task
            })
        })
        location.reload()  
    }

</script>